Resources:
  DB:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 5
      StorageType: gp2
      DBInstanceClass: !FindInMap [ InstanceSize, !Ref EnvironmentSize, DB ]
      DBName: !Ref DatabaseName
      Engine: MySQL
      MasterUsername: !Ref DatabaseUser
      MasterUserPassword: !Ref DatabasePassword
  EC2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [ RegionMap, !Ref "AWS::Region", AmazonLinux2 ]
      InstanceType: !FindInMap [ InstanceSize, !Ref EnvironmentSize, EC2 ]
      KeyName: AdvancedCFN
      UserData: 
        Fn::Base64:
          !Sub |
            #!/bin/bash
            yum update -y aws-cfn-bootstrap # good practice - always do this
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2 --configsets wordpress --region ${AWS::Region}
            yum -y update
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource EC2 --region ${AWS::Region}
    CreationPolicy:
      ResourceSignal:
        Count: "1"
        Timeout: PT15M
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          wordpress:
            - "configureCFN"
            - "installWordpress"
            - "configureWordpress"
        configureCFN:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackName}
                region=${AWS::Region}
                verbose=true
                interval=5
              mode: "000400"
              owner: "root"
              group: "root"
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.EC2.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource=EC2 --configsets wordpress --region ${AWS::Region}
              mode: "000400"
              owner: "root"
              group: "root"
          services:
            sysvinit:
              cfn-hup:
                enabled: "true"
                ensureRunning: "true"
                files:
                  - "/etc/cfn/cfn-hup.conf"
                  - "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
        installWordpress:
          packages:
            yum:
              httpd: []
              php: []
              mariadb: []
              php-mysql: []
          sources:
            /var/www/html: "https://wordpress.org/latest.tar.gz"
          commands:
            01-installPHP73:
              command: "amazon-linux-extras install -y php7.3"
          services:
            sysvinit:
              httpd:
                enabled: "true"
                ensureRunning: "true"
        configureWordpress:
          commands:
            01-cloneConfiguration:
              cwd: "/var/www/html/wordpress"
              test: "test ! -e /var/www/html/wordpress/wp-config.php"
              command: "cp wp-config-sample.php wp-config.php"
            02-injectDBHost:
              cwd: "/var/www/html/wordpress"
              command: !Sub |
                sed -i 's/localhost/${DB.Endpoint.Address}/g' wp-config.php
            03-injectDBName:
              cwd: "/var/www/html/wordpress"
              command: !Sub |
                sed -i 's/database_name_here/${DatabaseName}/g' wp-config.php
            04-injectDBUser:
              cwd: "/var/www/html/wordpress"
              command: !Sub |
                sed -i 's/username_here/${DatabaseUser}/g' wp-config.php
            05-injectDBPassword:
              cwd: "/var/www/html/wordpress"
              command: !Sub |
                sed -i 's/password_here/${DatabasePassword}/g' wp-config.php
  S3:
    Type: AWS::S3::Bucket

Parameters:
  EnvironmentSize:
    Type: String
    Default: SMALL
    AllowedValues:
      - SMALL
      - MEDIUM
      - LARGE
    Description: Select environment size (S,M,L)
  DatabaseName:
    Type: String
    Default: wordpress
  DatabaseUser:
    Type: String
    Default: wordpress
  DatabasePassword:
    Type: String
    Default: w0rdpr355
    NoEcho: true

Mappings:
  InstanceSize:
    SMALL:
      EC2: t2.micro
      DB: db.t2.micro
    MEDIUM:
      EC2: t2.small
      DB: db.t2.small
    LARGE:
      EC2: t2.medium
      DB: db.t2.medium
  RegionMap:
    us-east-1:
      AmazonLinux2: ami-062f7200baf2fa504
    us-east-2:
      AmazonLinux2: ami-02ccb28830b645a41
    us-west-1:
      AmazonLinux2: ami-03caa3f860895f82e
    us-west-2:
      AmazonLinux2: ami-04590e7389a6e577c
    ap-east-1:
      AmazonLinux2: ami-db3d78aa
    ap-south-1:
      AmazonLinux2: ami-0217a85e28e625474
    ap-northeast-2:
      AmazonLinux2: ami-0bea7fd38fabe821a
    ap-southeast-1:
      AmazonLinux2: ami-05c64f7b4062b0a21
    ap-southeast-2:
      AmazonLinux2: ami-0b8b10b5bf11f3a22
    ap-northeast-1:
      AmazonLinux2: ami-011facbea5ec0363b
    ca-central-1:
      AmazonLinux2: ami-0a269ca7cc3e3beff
    eu-central-1:
      AmazonLinux2: ami-07cda0db070313c52
    eu-west-1:
      AmazonLinux2: ami-0713f98de93617bb4
    eu-west-2:
      AmazonLinux2: ami-0089b31e09ac3fffc
    eu-west-3:
      AmazonLinux2: ami-007fae589fdf6e955
    eu-north-1:
      AmazonLinux2: ami-0662eb9b9b8685935
    sa-east-1:
      AmazonLinux2: ami-09de7b4017733e2af